
Project Name : Data Harvest

Description :
Data Harvest is a web-based application designed to collect, analyze, and visualize data from various e-commerce platforms such as Amazon, eBay, and AliExpress. The application allows users to search for products and retrieve relevant information such as product details, reviews, and pricing data. It leverages web scraping techniques to gather data in real-time, providing users with valuable insights to inform their purchasing decisions. With an intuitive user interface and powerful backend processing, Data Harvest simplifies the process of gathering and analyzing e-commerce data.

Key Features :
-Search for products across multiple e-commerce platforms.
-Retrieve product details, reviews, and pricing information.
-Real-time data collection using web scraping techniques.
-Intuitive user interface for easy navigation and interaction.
-Backend processing for data analysis and visualization.

Getting Started:
To get started with Data Harvest, simply clone the repository and modify the paths for example the ones included in the scrapping scripts (\backend\api\scrappers)   

Contributing
We welcome contributions from the community! If you'd like to contribute to Data Harvest .


pip install 
appdirs==1.4.4 
asgiref==3.8.1 
asttokens==2.4.1 
attrs==23.2.0 
beautifulsoup4==4.12.3 
blinker==1.7.0 
bs4==0.0.2 
certifi==2024.2.2 
cffi==1.16.0 
charset-normalizer==3.3.2 
click==8.1.7 
colorama==0.4.6 
comm==0.2.1 
contourpy==1.2.0 
cssselect==1.2.0 
cycler==0.12.1 
debugpy==1.8.1 
decorator==5.1.1 
Django==5.0.3 
dnspython==2.6.1 
executing==2.0.1 
fake-useragent==1.4.0 
Flask==3.0.2 
fonttools==4.48.1 
geckodriver-autoinstaller==0.1.0 
h11==0.14.0 idna==3.6 
importlib-metadata==7.0.1 
ipykernel==6.29.2 
ipython==8.21.0 
itsdangerous==2.1.2 
jedi==0.19.1
Jinja2==3.1.3
joblib==1.3.2
   jupyter_client==8.6.0 
   jupyter_core==5.7.1 
   kiwisolver==1.4.5 
   lxml==5.1.0 
   MarkupSafe==2.1.5 
   matplotlib==3.8.2 
   matplotlib-inline==0.1.6 
   nest-asyncio==1.6.0 numpy==1.26.4 outcome==1.3.0.post0 packaging==23.2 pandas==2.2.0 parse==1.20.1 parso==0.8.3 pillow==10.2.0 platformdirs==4.2.0 prompt-toolkit==3.0.43 psutil==5.9.8 pure-eval==0.2.2 pycparser==2.21 pyee==11.1.0 Pygments==2.17.2 pymongo==4.6.3 pyparsing==3.1.1 pyppeteer==2.0.0 pyquery==2.0.0 PySocks==1.7.1 python-dateutil==2.8.2 python-dotenv==1.0.1 pytz==2024.1 pywin32==306 pyzmq==25.1.2 requests==2.31.0 requests-html==0.10.0 scikit-learn==1.4.1.post1 scipy==1.12.0 seaborn==0.13.2 selenium==4.19.0 six==1.16.0 sniffio==1.3.0 sortedcontainers==2.4.0 soupsieve==2.5 sqlparse==0.4.4 stack-data==0.6.3 threadpoolctl==3.3.0 tornado==6.4 tqdm==4.66.2 traitlets==5.14.1 trio==0.24.0 trio-websocket==0.11.1 typing_extensions==4.9.0 tzdata==2024.1 urllib3==1.26.18 w3lib==2.1.2 wcwidth==0.2.13 webdriver-manager==4.0.1 websockets==10.4 Werkzeug==3.0.1 wsproto==1.2.0 zipp==3.17.0


to run the back end part :
backend> Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
backend> VirtualEnv\Scripts\activate
(VirtualEnv) py manage.py runserver

_____________________________________________________________________
To run the front end part:
frontend> npm run dev
